# Do not modify this file!  It was generated by â€˜nixos-generate-configâ€™
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "usbhid"
    "usb_storage"
    "sd_mod"
  ];
  boot.initrd.kernelModules = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/09ac4479-b2e0-4e24-93da-e7f2fb157196";
    fsType = "ext4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/4E61-8133";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp6s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  services = {
    xserver = {
      videoDrivers = [
        "amdgpu"
        "nvidia" # ðŸ‘ˆ ENABLE NVIDIA
      ];
    };
    asusd = {
      enable = true;
      enableUserService = true;
      package = pkgs.asusctl;
    };
    power-profiles-daemon.enable = true;
    thermald.enable = true;
    # tlp = {
    #   enable = true;
    #   settings = {
    #     START_CHARGE_THRESH_BAT0 = 40;
    #     STOP_CHARGE_THRESH_BAT0 = 95; 

    #     CPU_SCALING_GOVERNOR_ON_AC = "balanced";
    #     CPU_ENERGY_PERF_POLICY_ON_AC = "balanced";

    #     CPU_SCALING_GOVERNOR_ON_BAT = "powersave";
    #     CPU_ENERGY_PERF_POLICY_ON_BAT = "power";

    #     CPU_MIN_PERF_ON_AC = 0;
    #     CPU_MAX_PERF_ON_AC = 100;
    #     CPU_MIN_PERF_ON_BAT = 0;
    #     CPU_MAX_PERF_ON_BAT = 40;

    #     DISK_DEVICES = "nvme0n1 sda";
    #     DISK_IDLE_SECS_ON_AC = 0;
    #     DISK_IDLE_SECS_ON_BAT = 2;

    #     USB_AUTOSUSPEND = 0;
    #     USB_EXCLUDE_AUDIO = 1; 
    #   };
    # };
    supergfxd = {
      enable = true;
      settings = {
        supergfxctl-mode = "Integrated";
        gfx-vfio-enable = true;
      };
    };
  };

  # powerManagement = {
  #   powertop.enable = true;
  # };

  systemd.services = {
    supergfxd.path = [ pkgs.pciutils ];
    power-profiles-daemon = {
      enable = true;
      wantedBy = [ "multi-user.target" ];
    };
  };

  hardware.opengl = {
    enable = true;
  };

  boot.kernelModules = [ "nvidia" ];
  boot.extraModulePackages = [ config.boot.kernelPackages.nvidia_x11 ];

  hardware.nvidia = {
    modesetting.enable = true;
    nvidiaSettings = true;
    open = true;
    powerManagement = {
      enable = false;
      finegrained = false;
    };
    prime = {
      reverseSync.enable = true;
      offload = {
        # enable = lib.mkForce true; 
        enableOffloadCmd = true;
      };
      amdgpuBusId = "PCI:8:0:0"; # AMD integrated GPU
      nvidiaBusId = "PCI:1:0:0"; # NVIDIA discrete GPU
    };
    package = config.boot.kernelPackages.nvidiaPackages.latest; # ðŸ‘ˆ ENABLE NVIDIA
    # package = config.boot.kernelPackages.nvidiaPackages.beta; # temporarily to fix ppd/active gpu issues
  };
  boot.kernelParams = [
    "amdgpu.gpu_recovery=1"
    "amdgpu.sg_display=0"
    "amdgpu.dcdebugmask=0x10"
  ];
  environment.sessionVariables.NIXOS_OZONE_WL = "1";

}
